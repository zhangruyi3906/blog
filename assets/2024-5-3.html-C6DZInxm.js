import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as l,c as i,a as n,e as s,b as e,d as t}from"./app-XrbvynCe.js";const d={},r=n("hr",null,null,-1),c=n("p",null,[s("title: 鱼皮课程学习"),n("br"),s(" date: 2024-05-03"),n("br"),s(" category:")],-1),u=n("ul",null,[n("li",null,[s("每日一记"),n("br"),s(" tag:")]),n("li",null,"学习记录")],-1),v=n("hr",null,null,-1),k={href:"https://r.pnpm.io/comp",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,"解决办法：",-1),g=n("p",null,"npm install -g pnpm@8",-1),h=n("li",null,[n("p",null,"今天购买了鱼皮的课程，这也是值得的。听了一下鱼皮讲解的简历如何写。")],-1),b=n("li",null,[n("p",null,"学习了js相关的语法，自己再总结一下相关的内容。")],-1),y=n("li",null,[n("p",null,"今天开始写智慧手环的前端页面，安装了fitten code AI插件，提高书写效率=》性能堪比copilot。")],-1),x=n("li",null,[n("p",null,"今天看了一下MQTT协议的内容，是知识星球上一个up主分享的。")],-1),_=n("h1",{id:"开始今天的前端项目搭建",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开始今天的前端项目搭建"},[n("span",null,"开始今天的前端项目搭建")])],-1),f=t(`<li><h2 id="pnpm-包管理器-创建项目" tabindex="-1"><a class="header-anchor" href="#pnpm-包管理器-创建项目"><span>pnpm 包管理器 - 创建项目</span></a></h2><p>安装方式：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>npm install -g pnpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建项目：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>pnpm create vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,1),j=t(`<h2 id="eslint-prettier-配置代码风格" tabindex="-1"><a class="header-anchor" href="#eslint-prettier-配置代码风格"><span>ESLint &amp; prettier 配置代码风格</span></a></h2><p><strong>环境同步：</strong></p><ol><li><strong>安装了插件 ESlint，开启保存自动修复</strong></li><li><strong>禁用了插件 Prettier，并关闭保存自动格式化</strong></li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token comment">// ESlint插件 + Vscode配置 实现自动格式化修复</span>
<span class="token string-property property">&quot;editor.codeActionsOnSave&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;source.fixAll&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token string-property property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>配置文件 .eslintrc.cjs</strong></p>`,5),q={href:"https://prettier.io/docs/en/options.html",target:"_blank",rel:"noopener noreferrer"},w=n("ol",null,[n("li",null,[n("p",null,"单引号")]),n("li",null,[n("p",null,"不使用分号")]),n("li",null,[n("p",null,"每行宽度至多80字符")]),n("li",null,[n("p",null,"不加对象|数组最后逗号")]),n("li",null,[n("p",null,"换行符号不限制（win mac 不一致）")])],-1),E=n("li",null,[n("p",null,"vue组件名称多单词组成（忽略index.vue）")],-1),D=n("li",null,[n("p",null,"props解构（关闭）")],-1),A=t(`<div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code>  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;prettier/prettier&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">singleQuote</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 单引号</span>
        <span class="token literal-property property">semi</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 无分号</span>
        <span class="token literal-property property">printWidth</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token comment">// 每行宽度至多80字符</span>
        <span class="token literal-property property">trailingComma</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 不加对象|数组最后逗号</span>
        <span class="token literal-property property">endOfLine</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span> <span class="token comment">// 换行符号不限制（win mac 不一致）</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;vue/multi-word-component-names&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">ignores</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">]</span> <span class="token comment">// vue组件名称多单词组成（忽略index.vue）</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;vue/no-setup-props-destructure&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 关闭 props 解构的校验</span>
    <span class="token comment">// 💡 添加未定义变量错误提示，create-vue@3.6.3 关闭，这里加上是为了支持下一个章节演示。</span>
    <span class="token string-property property">&#39;no-undef&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-基于-husky-的代码检查工作流" tabindex="-1"><a class="header-anchor" href="#_3-基于-husky-的代码检查工作流"><span>3. 基于 husky 的代码检查工作流</span></a></h2><p>husky 是一个 git hooks 工具 ( git的钩子工具，可以在特定时机执行特定的命令 )</p><p><strong>husky 配置</strong></p>`,4),N=n("li",null,[n("p",null,"git初始化 git init")],-1),R={href:"https://typicode.github.io/husky/",target:"_blank",rel:"noopener noreferrer"},T=t(`<div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code>pnpm dlx husky<span class="token operator">-</span>init <span class="token operator">&amp;&amp;</span> pnpm install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>修改 .husky/pre-commit 文件</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code>pnpm lint
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>**问题：**默认进行的是全量检查，耗时问题，历史问题。</p><p><strong>lint-staged 配置</strong></p><ol><li>安装</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code>pnpm i lint<span class="token operator">-</span>staged <span class="token operator">-</span><span class="token constant">D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>配置 <code>package.json</code></li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token punctuation">{</span>
  <span class="token comment">// ... 省略 ...</span>
  <span class="token string-property property">&quot;lint-staged&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;*.{js,ts,vue}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;eslint --fix&quot;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">{</span>
  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ... 省略 ...</span>
    <span class="token string-property property">&quot;lint-staged&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lint-staged&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>修改 .husky/pre-commit 文件</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code>pnpm lint<span class="token operator">-</span>staged
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11),G=t('<li><h2 id="调整项目目录" tabindex="-1"><a class="header-anchor" href="#调整项目目录"><span>调整项目目录</span></a></h2><p>默认生成的目录结构不满足我们的开发需求，所以这里需要做一些自定义改动。主要是两个工作：</p><ul><li>删除初始化的默认文件</li><li>修改剩余代码内容</li><li>新增调整我们需要的目录结构</li><li>拷贝初始化资源文件，安装预处理器插件</li></ul><ol><li>删除文件</li><li>修改内容</li></ol></li>',1),P=n("h2",{id:"引入-element-ui-组件库",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#引入-element-ui-组件库"},[n("span",null,"引入 element-ui 组件库")])],-1),B=n("strong",null,"官方文档：",-1),L={href:"https://element-plus.org/zh-CN/",target:"_blank",rel:"noopener noreferrer"},O=t(`<ul><li>安装</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code>$ pnpm add element<span class="token operator">-</span>plus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>自动按需：</strong></p><ol><li>安装插件</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code>pnpm add <span class="token operator">-</span><span class="token constant">D</span> unplugin<span class="token operator">-</span>vue<span class="token operator">-</span>components unplugin<span class="token operator">-</span>auto<span class="token operator">-</span><span class="token keyword">import</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>然后把下列代码插入到你的 <code>Vite</code> 或 <code>Webpack</code> 的配置文件中</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token operator">...</span>
<span class="token keyword">import</span> AutoImport <span class="token keyword">from</span> <span class="token string">&#39;unplugin-auto-import/vite&#39;</span>
<span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">&#39;unplugin-vue-components/vite&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ElementPlusResolver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unplugin-vue-components/resolvers&#39;</span>

<span class="token comment">// https://vitejs.dev/config/</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token operator">...</span>
    <span class="token function">AutoImport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>直接使用</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Primary</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Success</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Info</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warning<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Warning</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Danger</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    ...
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li><h2 id="pinia仓库配置" tabindex="-1"><a class="header-anchor" href="#pinia仓库配置"><span>pinia仓库配置</span></a></h2></li><li><h2 id="完成axios配置" tabindex="-1"><a class="header-anchor" href="#完成axios配置"><span>完成axios配置</span></a></h2></li><li><h2 id="首页整体路由设计" tabindex="-1"><a class="header-anchor" href="#首页整体路由设计"><span>首页整体路由设计</span></a></h2></li></ol>`,10),S=t("<p><strong>实现目标:</strong></p><ul><li>完成整体路由规划【搞清楚要做几个页面，它们分别在哪个路由下面，怎么跳转的.....】</li><li>通过观察, 点击左侧导航, 右侧区域在切换, 那右侧区域内容一直在变, 那这个地方就是一个路由的出口</li><li>我们需要搭建嵌套路由</li></ul><p>目标：</p><ul><li>把项目中所有用到的组件及路由表, 约定下来</li></ul><p><strong>约定路由规则</strong></p><table><thead><tr><th>path</th><th>文件</th><th>功能</th><th>组件名</th><th>路由级别</th></tr></thead><tbody><tr><td>登录</td><td></td><td></td><td></td><td></td></tr><tr><td>/login</td><td>views/login/LoginPage.vue</td><td>登录&amp;注册</td><td>LoginPage</td><td>一级路由</td></tr><tr><td>布局</td><td></td><td></td><td></td><td></td></tr><tr><td>/</td><td>views/layout/LayoutContainer.vue</td><td>布局架子</td><td>LayoutContainer</td><td>一级路由</td></tr><tr><td>工作台：数据展示</td><td></td><td></td><td></td><td></td></tr><tr><td>├─ /dashboard</td><td>views/index/DashBoard.vue</td><td>数据展示</td><td>dashboard</td><td>二级路由</td></tr><tr><td>关爱人管理</td><td>添加关爱人、关爱人列表、关爱人详情、关爱人历史信息</td><td></td><td></td><td></td></tr><tr><td>├─ /guadian/addGuadian</td><td>views/guadian/AddGuadian.vue</td><td>添加关爱人</td><td>addGuadian</td><td>二级路由</td></tr><tr><td>├─ /guadian/GuadianList</td><td>views/guadian/GuadianList.vue</td><td>关爱人列表</td><td>GuadianList</td><td>二级路由</td></tr><tr><td>├─ /guadian/GuadianDetail</td><td>views/guadian/GuadianDetail</td><td>关爱人详情</td><td>GuadianDetail</td><td></td></tr><tr><td>├─ /guadian/Guardianhistory</td><td>views/guadian/GuadianHistory</td><td>关爱人历史信息</td><td>Guardianhistory</td><td></td></tr><tr><td>用户管理</td><td>退出、修改密码、编辑、用户信息</td><td></td><td></td><td></td></tr><tr><td>├─ /user/profile</td><td>views/user/UserProfile.vue</td><td>用户信息</td><td>UserProfile</td><td>二级路由</td></tr><tr><td>├─ /user/Edit</td><td>views/user/UserEdit.vue</td><td>编辑</td><td>UserEdit</td><td>二级路由</td></tr><tr><td>├─ /user/password</td><td>views/user/UserPassword.vue</td><td>修改密码</td><td>UserPassword</td><td>二级路由</td></tr><tr><td>├─ /user/logout</td><td>views/user/UserLogout.vue</td><td>登出</td><td>UserLogout</td><td>二级路由</td></tr><tr><td>设备管理</td><td>添加设备、删除设备</td><td></td><td></td><td></td></tr><tr><td>├─ /device/addDevice</td><td>views/device/AddDevice</td><td>添加设备</td><td>addDevice</td><td>二级路由</td></tr><tr><td>├─ /device/deleteDevice</td><td>views/device/DeleteDevice</td><td>删除设备</td><td>deleteDevice</td><td>二级路由</td></tr><tr><td>预警管理</td><td>预警记录、预警提醒</td><td></td><td></td><td></td></tr><tr><td>├─ /emergency/emergencyRecord</td><td>views/emergency/EmergencyRecord</td><td>预警记录</td><td>emergencyRecord</td><td>二级路由</td></tr><tr><td>├─ /emergency/emergencyRemind</td><td>views/emergency/EmergencyRemind</td><td>预警提醒</td><td>emergencyRemind</td><td>二级路由</td></tr><tr><td>数据管理</td><td>数据导出、数据分析</td><td></td><td></td><td></td></tr><tr><td>├─ /data/dataExport</td><td>views/data/DataExport</td><td>数据导出</td><td>dataExport</td><td>二级路由</td></tr><tr><td>├─ /data/dataAnalysis</td><td>views/data/DataAnalysis</td><td>数据分析</td><td>dataAnalysis</td><td>二级路由</td></tr><tr><td>系统操作日志</td><td></td><td></td><td></td><td></td></tr><tr><td>├─ /log/logOperation</td><td>views/log/LogOperation</td><td>操作日志</td><td>logOperation</td><td>二级路由</td></tr></tbody></table><p>明确了路由规则，可以全部配完，也可以边写边配。</p><p>ngrok 内网穿透</p>",8),C={href:"https://mp.weixin.qq.com/s?__biz=MzI1NDczNTAwMA==&mid=2247550173&idx=1&sn=f28b5a6601ab8a5ab95ddad274e4b5ca&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},I=t("<p>想要让面试官相信项目是你自己做的，那么一定要能回答出以下几个问题：</p><ol><li>请介绍一下你这个项目的业务流程？包含的主要模块以及自己负责的工作。</li><li>你在做这个项目中，遇到的最大的难点、或者解决过的最复杂的 Bug 是什么？</li><li>你的项目有实际上线么？使用哪种方式进行部署？</li></ol><p>如果能答出来，那么就可以放心啦~ 答不出来就继续去准</p><p>我的搜索习惯是：<br> ·搜学习资源：鱼皮的编程导航知识星球、鱼皮的编程导航、B站、网盘聚合搜索平台、CSDN<br> ·搜学习路线：鱼皮的编程导航知识星球、知乎、掘金<br> ·搜项目：GitHub、Npm官网、掘金、Gitee、百度开发者搜索<br> ·搜资讯：InfoQ、掘金、开源中国、微信搜一搜、51CTO<br> ·搜图片：百度、Google、Bing、Pexel、.Pixiv、识图软件<br> ·搜Bug:百度、官方文档、Stack Overflow、GitHub Issues区、百度开发者搜索、CSDN</p>",4);function U(V,z){const a=o("ExternalLinkIcon");return l(),i("div",null,[r,c,u,v,n("ol",null,[n("li",null,[n("p",null,[s("pnpm create vue ERROR: This version of pnpm requires at least Node.js v18.12 The current version of Node.js is v16.17.1 Visit "),n("a",k,[s("https://r.pnpm.io/comp"),e(a)]),s(" to see the list of past pnpm versions with respective Node.js version support.")]),m,g]),h,b,y,x]),_,n("ol",null,[f,n("li",null,[j,n("ol",null,[n("li",null,[n("p",null,[s("prettier 风格配置 "),n("a",q,[s("https://prettier.io"),e(a)])]),w]),E,D]),A,n("ol",null,[N,n("li",null,[n("p",null,[s("初始化 husky 工具配置 "),n("a",R,[s("https://typicode.github.io/husky/"),e(a)])])])]),T]),G,n("li",null,[P,n("p",null,[B,s(),n("a",L,[s("https://element-plus.org/zh-CN/"),e(a)])]),O])]),S,n("p",null,[n("a",C,[s("不用服务器，1 分钟上线网站！ (qq.com)"),e(a)])]),I])}const H=p(d,[["render",U],["__file","2024-5-3.html.vue"]]),W=JSON.parse('{"path":"/everyday/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/2024-5-3.html","title":"开始今天的前端项目搭建","lang":"en-US","frontmatter":{"description":"title: 鱼皮课程学习 date: 2024-05-03 category: 每日一记 tag: 学习记录 pnpm create vue ERROR: This version of pnpm requires at least Node.js v18.12 The current version of Node.js is v16.17.1 V...","head":[["meta",{"property":"og:url","content":"https://github.com/zhangruyi3906/blog/everyday/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/2024-5-3.html"}],["meta",{"property":"og:site_name","content":"乘风破浪（长风破浪会有时，直挂云帆济沧海）"}],["meta",{"property":"og:title","content":"开始今天的前端项目搭建"}],["meta",{"property":"og:description","content":"title: 鱼皮课程学习 date: 2024-05-03 category: 每日一记 tag: 学习记录 pnpm create vue ERROR: This version of pnpm requires at least Node.js v18.12 The current version of Node.js is v16.17.1 V..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-14T14:04:58.000Z"}],["meta",{"property":"article:author","content":"dreamchaser"}],["meta",{"property":"article:modified_time","content":"2024-06-14T14:04:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开始今天的前端项目搭建\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-14T14:04:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"dreamchaser\\",\\"url\\":\\"https://github.com/zhangruyi3906\\"}]}"]]},"headers":[],"git":{"createdTime":1718371287000,"updatedTime":1718373898000,"contributors":[{"name":"zhangruyi3906","email":"3023208132@qq.com","commits":2}]},"readingTime":{"minutes":5.47,"words":1641},"filePathRelative":"everyday/学习记录/2024-5-3.md","localizedDate":"June 14, 2024","excerpt":"<hr>\\n<p>title: 鱼皮课程学习<br>\\ndate: 2024-05-03<br>\\ncategory:</p>\\n<ul>\\n<li>每日一记<br>\\ntag:</li>\\n<li>学习记录</li>\\n</ul>\\n<hr>\\n<ol>\\n<li>\\n<p>pnpm create vue ERROR: This version of pnpm requires at least Node.js v18.12 The current version of Node.js is v16.17.1 Visit <a href=\\"https://r.pnpm.io/comp\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://r.pnpm.io/comp</a>  to see the list of past pnpm versions with respective Node.js version support.</p>\\n<p>解决办法：</p>\\n<p>npm install -g pnpm@8</p>\\n</li>\\n<li>\\n<p>今天购买了鱼皮的课程，这也是值得的。听了一下鱼皮讲解的简历如何写。</p>\\n</li>\\n<li>\\n<p>学习了js相关的语法，自己再总结一下相关的内容。</p>\\n</li>\\n<li>\\n<p>今天开始写智慧手环的前端页面，安装了fitten code AI插件，提高书写效率=》性能堪比copilot。</p>\\n</li>\\n<li>\\n<p>今天看了一下MQTT协议的内容，是知识星球上一个up主分享的。</p>\\n</li>\\n</ol>","autoDesc":true}');export{H as comp,W as data};
