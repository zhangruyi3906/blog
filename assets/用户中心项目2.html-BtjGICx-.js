import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,a as n,e as s,b as t,d as p}from"./app-cNHY-YI4.js";const i={},u=p(`<h1 id="用户中心" tabindex="-1"><a class="header-anchor" href="#用户中心"><span>用户中心</span></a></h1><h2 id="登录逻辑" tabindex="-1"><a class="header-anchor" href="#登录逻辑"><span>登录逻辑</span></a></h2><p>接受参数：用户账户，密码</p><p>接受类型：POST</p><p>请求体：JSON格式的数据</p><blockquote><p>请求参数很长时不建议用get</p></blockquote><p>返回值：用户信息(脱敏)</p><h3 id="具体逻辑" tabindex="-1"><a class="header-anchor" href="#具体逻辑"><span>具体逻辑：</span></a></h3><ol><li>校验用户的账户，密码，是否符合要求 <ol><li>账户不少于四位</li><li>密码不少于四位</li><li>账户不能重复</li><li>账户不包含特殊字符</li><li>其他的校验</li></ol></li><li>校验密码是否输入正确 ，要和数据库中的密码进行对比</li><li>记录用户的登录态（Session），存到服务器上，（用后端SpringBoot 框架封装的服务器tomcat去记录）</li><li>返回用户信息（脱敏）</li></ol><h4 id="如何知道是哪个用户" tabindex="-1"><a class="header-anchor" href="#如何知道是哪个用户"><span>如何知道是哪个用户？</span></a></h4><ol><li>连接服务器之后，得到一个session态，返回给前端</li><li>登录成功，得到登录成功的session，返回给前端一个设置cookie的命令 session =&gt; cookie</li><li>前端接收到后端命令后，设置cookie，保存到浏览器中</li><li>前端再次去请求后端的时候，在请求头中带着cookie去请求</li><li>后端拿到前端传来的cookie，找到对应的session</li><li>后端从session中可以取出基于该session存储的变量等。</li></ol><p>登录service</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 用户登录
 *
 * <span class="token keyword">@param</span> <span class="token parameter">userLoginDto</span> 用户登录信息
 * <span class="token keyword">@param</span> <span class="token parameter">request</span>
 * <span class="token keyword">@return</span> 脱敏后的用户信息
 */</span>
<span class="token class-name">User</span> <span class="token function">userLogin</span><span class="token punctuation">(</span><span class="token class-name">UserLoginDto</span> userLoginDto<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重点逻辑，用户脱敏：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//用户脱敏</span>
<span class="token class-name">User</span> safetyUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
safetyUser<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
safetyUser<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
safetyUser<span class="token punctuation">.</span><span class="token function">setUserAccount</span><span class="token punctuation">(</span>userAccount<span class="token punctuation">)</span><span class="token punctuation">;</span>
safetyUser<span class="token punctuation">.</span><span class="token function">setAvatarUrl</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getAvatarUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
safetyUser<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
safetyUser<span class="token punctuation">.</span><span class="token function">setPhone</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
safetyUser<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
safetyUser<span class="token punctuation">.</span><span class="token function">setUserStatus</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>记录登录态：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">UserConstant</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_STATE</span><span class="token punctuation">,</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>完整代码：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">userLogin</span><span class="token punctuation">(</span><span class="token class-name">UserLoginDto</span> userLoginDto<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> userAccount <span class="token operator">=</span> userLoginDto<span class="token punctuation">.</span><span class="token function">getUserAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> userPassword <span class="token operator">=</span> userLoginDto<span class="token punctuation">.</span><span class="token function">getUserPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyBlank</span><span class="token punctuation">(</span>userAccount<span class="token punctuation">,</span> userPassword<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//todo 修改为自定义异常</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>userAccount<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>userPassword<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//账户不能包含字符</span>
    <span class="token comment">//账户不能包含特殊字符</span>
    <span class="token class-name">String</span> validPattern <span class="token operator">=</span> <span class="token string">&quot;^[a-zA-Z0-9_]+$&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Matcher</span> matcher <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>validPattern<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>userAccount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>matcher<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">String</span> encryptPassword <span class="token operator">=</span> <span class="token class-name">DigestUtils</span><span class="token punctuation">.</span><span class="token function">md5DigestAsHex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token constant">SALT</span> <span class="token operator">+</span> userPassword<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//查询用户是否存在</span>
    <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    userQueryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;userAccount&quot;</span><span class="token punctuation">,</span> userAccount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    userQueryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;userPassword&quot;</span><span class="token punctuation">,</span> encryptPassword<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>userQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;user login failed, userAccount cannot match userPassword&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//用户脱敏</span>
    <span class="token class-name">User</span> safetyUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setUserAccount</span><span class="token punctuation">(</span>userAccount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setAvatarUrl</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getAvatarUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setPhone</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setUserStatus</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//记录用户登录态</span>
    request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">UserConstant</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_STATE</span><span class="token punctuation">,</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> safetyUser<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里注意，系统设置的删除并不是真正的删除，而是逻辑删除(0-未删除 1-删除)可以在mybatis-plus中设置</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">mybatis-plus</span><span class="token punctuation">:</span>
  <span class="token key atrule">configuration</span><span class="token punctuation">:</span>
    <span class="token key atrule">map-underscore-to-camel-case</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">global-config</span><span class="token punctuation">:</span>
    <span class="token key atrule">db-config</span><span class="token punctuation">:</span>
      <span class="token key atrule">logic-delete-field</span><span class="token punctuation">:</span> flag <span class="token comment"># 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)</span>
      <span class="token key atrule">logic-delete-value</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># 逻辑已删除值(默认为 1)</span>
      <span class="token key atrule">logic-not-delete-value</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token comment"># 逻辑未删除值(默认为 0)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="控制器usercontroller" tabindex="-1"><a class="header-anchor" href="#控制器usercontroller"><span>控制器UserController</span></a></h3><h4 id="提高效率的插件" tabindex="-1"><a class="header-anchor" href="#提高效率的插件"><span>提高效率的插件</span></a></h4><p>下面这个插件可以自动填充函数 的参数</p><p><img src="https://s2.loli.net/2023/10/16/STjFWIAhLODfzNq.webp" alt="image-20231016195611322"></p><p>使用如下：</p><p><img src="https://s2.loli.net/2023/10/16/1wplou7fR8siKnY.webp" alt="image-20231016195719640"></p><p>此时就可以自动填充了</p><p><img src="https://s2.loli.net/2023/10/16/gf8XQFbuviy9Ezw.webp" alt="image-20231016195845930"></p><p>完整逻辑如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/register&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">userRegister</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserRegisterDto</span> userRegisterDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>userRegisterDto <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;参数不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">long</span> id <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">userRegister</span><span class="token punctuation">(</span>userRegisterDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">userLogin</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserLoginDto</span> userLoginDto<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>userLoginDto <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;参数不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">String</span> userAccount <span class="token operator">=</span> userLoginDto<span class="token punctuation">.</span><span class="token function">getUserAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> userPassword <span class="token operator">=</span> userLoginDto<span class="token punctuation">.</span><span class="token function">getUserPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyBlank</span><span class="token punctuation">(</span>userAccount<span class="token punctuation">,</span> userPassword<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;用户名或密码不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">userLogin</span><span class="token punctuation">(</span>userLoginDto<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="登录注册测试" tabindex="-1"><a class="header-anchor" href="#登录注册测试"><span>登录注册测试</span></a></h3><p>使用RestfulTool 进行接口测试：</p><p><img src="https://s2.loli.net/2023/10/16/GI4rkvezQxAiODn.webp" alt="image-20231016200612792"></p><p>测试成功：</p><p><img src="https://s2.loli.net/2023/10/16/1qEksG9NonPxBUO.webp" alt="image-20231016200709652"></p><p>查询用户：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/search&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchUsers</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAdmin</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        userQueryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userList <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>userQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> userList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>user <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">getSafetyUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里封装了一个用户脱敏的函数：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getSafetyUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">User</span> safetyUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setUserAccount</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setAvatarUrl</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getAvatarUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setPhone</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setUserStatus</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    safetyUser<span class="token punctuation">.</span><span class="token function">setUserRole</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> safetyUser<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除用户：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/delete/{id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> id<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAdmin</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>id <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>判断是不是管理员：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isAdmin</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//仅管理员可以查询</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">UserConstant</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_STATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> user<span class="token punctuation">.</span><span class="token function">getUserRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">UserConstant</span><span class="token punctuation">.</span><span class="token constant">ADMIN_USER_ROLE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="前端代码编写" tabindex="-1"><a class="header-anchor" href="#前端代码编写"><span>前端代码编写</span></a></h2><p>修改页脚代码为自己的信息：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token punctuation">{</span>
  key<span class="token operator">:</span> <span class="token string">&#39;github&#39;</span><span class="token punctuation">,</span>
  title<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">GithubOutlined</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">,</span>
  href<span class="token operator">:</span> <span class="token string">&#39;https://github.com/yunfeidog&#39;</span><span class="token punctuation">,</span>
  blankTarget<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span>
  key<span class="token operator">:</span> <span class="token string">&#39;Blog&#39;</span><span class="token punctuation">,</span>
  title<span class="token operator">:</span> <span class="token string">&#39;Blog&#39;</span><span class="token punctuation">,</span>
  href<span class="token operator">:</span> <span class="token string">&#39;https://yunfeidog.github.io/blogv2/&#39;</span><span class="token punctuation">,</span>
  blankTarget<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>页脚如下：</p><p><img src="https://s2.loli.net/2023/10/17/YfO1UcKrdFZXWIq.webp" alt="image-20231017154227098"></p><p>定义一个LOGO的常量：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">SYSTEM_LOGO</span> <span class="token operator">=</span> <span class="token string">&quot;https://s2.loli.net/2023/10/16/QRiUYmDLB2vZuE6.webp&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code>          logo<span class="token operator">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token constant">SYSTEM_LOGO</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删掉一些代码，保留登录页面：</p><p><img src="https://s2.loli.net/2023/10/17/obMOLzq2iZkeaud.webp" alt="image-20231017155255273"></p><p>修改前端登录参数：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>  <span class="token keyword">type</span> <span class="token class-name">LoginParams</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    userAccount<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    userPassword<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    autoLogin<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    type<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前后端交互" tabindex="-1"><a class="header-anchor" href="#前后端交互"><span>前后端交互</span></a></h3><p>前端 需要向后端发送请求 ajax</p><p>axios封装了ajax</p><p>request 是ant design 项目又封装了aixos</p><p>追踪request源码,用到了umi插件，requesConfig是一个配置</p><h3 id="代理" tabindex="-1"><a class="header-anchor" href="#代理"><span>代理</span></a></h3><p>正向代理：替客户端向服务器发送请求</p><p>反向代理：替服务器接受请求。</p><p>Nginx服务器，nodejs服务器</p>`,66),r={href:"http://localhost:8000/api/user/login",target:"_blank",rel:"noopener noreferrer"},k={href:"http://localhost:8080/user/login",target:"_blank",rel:"noopener noreferrer"},d=p(`<p>proxy.ts文件：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>dev<span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token comment">// localhost:8000/api/** -&gt; http://localhost:8080/api/**</span>
  <span class="token string-property property">&#39;/api/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 要代理的地址</span>
    target<span class="token operator">:</span> <span class="token string">&#39;http://localhost:8080&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// 配置了这个可以从 http 代理到 https</span>
    <span class="token comment">// 依赖 origin 的功能可能需要这个，比如 cookie</span>
    changeOrigin<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">//去掉 api 前缀</span>
    pathRewrite<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;^/api&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功测试登录：</p><p><img src="https://s2.loli.net/2023/10/17/4WRGpxJrOM3BLPT.webp" alt="image-20231017174107430"></p><h2 id="注册页面" tabindex="-1"><a class="header-anchor" href="#注册页面"><span>注册页面</span></a></h2><p>直接复制login页面进行修改即可：</p><p>添加一个路由：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>  <span class="token punctuation">{</span>
    path<span class="token operator">:</span> <span class="token string">&#39;/user&#39;</span><span class="token punctuation">,</span>
    layout<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    routes<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;登录&#39;</span><span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token string">&#39;/user/login&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> <span class="token string">&#39;./user/Login&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;注册&#39;</span><span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token string">&#39;/user/register&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> <span class="token string">&#39;./user/Register&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> component<span class="token operator">:</span> <span class="token string">&#39;./404&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),v={href:"http://localhost:8000/user/register%E5%8F%91%E7%8E%B0%E4%BC%9A%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0login",target:"_blank",rel:"noopener noreferrer"},m=p(`<p>在app.tsx中，需要修改onPageChange和fetchUserInfo函数</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code>    <span class="token function-variable function">onPageChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span>location<span class="token punctuation">}</span> <span class="token operator">=</span> history<span class="token punctuation">;</span>
      <span class="token keyword">const</span> whiteList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;/user/register&#39;</span><span class="token punctuation">,</span> loginPath<span class="token punctuation">]</span>
      <span class="token comment">// 如果在白名单中，不做任何处理</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>whiteList<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// 如果没有登录，重定向到 login</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initialState<span class="token operator">?.</span>currentUser <span class="token operator">&amp;&amp;</span> location<span class="token punctuation">.</span>pathname <span class="token operator">!==</span> loginPath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>loginPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时发现 注册按钮的字是<code>登录</code> 无法进行修改，因为这是procomponents里面写死的组件这里我们查看源码进行修改</p><p><img src="https://s2.loli.net/2023/10/17/FifwchAkd86Np7s.webp" alt="image-20231017181304607"></p><p>找到登录按钮，这时就可以修改属性来 修改注册 按钮的值</p><p><img src="https://s2.loli.net/2023/10/17/MJPsoaFUqtmZWpR.webp" alt="image-20231017181527032"></p><p>修改如下：</p><p><img src="https://s2.loli.net/2023/10/17/6WQXh5IRo7arO3M.webp" alt="image-20231017181647734"></p><p>成功：</p><p><img src="https://s2.loli.net/2023/10/17/PvpCN8YO7ZfrcUy.webp" alt="image-20231017181710615"></p><p>注册逻辑：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code>  <span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token operator">:</span> <span class="token constant">API</span><span class="token punctuation">.</span>RegisterParams<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>userPassword<span class="token punctuation">,</span> checkPassword<span class="token punctuation">}</span> <span class="token operator">=</span> values<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>userPassword <span class="token operator">!=</span> checkPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;两次输入的密码不一致！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// 注册</span>
      <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">register</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>id <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> defaultLoginSuccessMessage <span class="token operator">=</span> <span class="token string">&#39;注册成功！&#39;</span><span class="token punctuation">;</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>defaultLoginSuccessMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/** 此方法会跳转到 redirect 参数所在的位置 */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>history<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span>query<span class="token punctuation">}</span> <span class="token operator">=</span> history<span class="token punctuation">.</span>location<span class="token punctuation">;</span>
        history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          pathname<span class="token operator">:</span> <span class="token string">&#39;/user/login&#39;</span><span class="token punctuation">,</span>
          query
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">register error id =</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// 如果失败去设置用户错误信息</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> defaultLoginFailureMessage <span class="token operator">=</span> <span class="token string">&#39;注册失败，请重试！&#39;</span><span class="token punctuation">;</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>defaultLoginFailureMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册 成功页面：</p><p><img src="https://s2.loli.net/2023/10/17/SCikVLnQOjdPpJY.webp" alt="image-20231017183406608"></p><h2 id="获取当前用户" tabindex="-1"><a class="header-anchor" href="#获取当前用户"><span>获取当前用户</span></a></h2><p>获取当前用户后端接口：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/current&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">gerCurrentUser</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">UserConstant</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_STATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Long</span> userId <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">User</span> user1 <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">getSafetyUser</span><span class="token punctuation">(</span>user1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改前端每次刷新自动获取当前用户的逻辑：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getInitialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
  settings<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>LayoutSettings<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  currentUser<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">API</span><span class="token punctuation">.</span>CurrentUser<span class="token punctuation">;</span>
  loading<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  fetchUserInfo<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">API</span><span class="token punctuation">.</span>CurrentUser <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 页面刚进入时，获取用户信息</span>
  <span class="token keyword">const</span> <span class="token function-variable function">fetchUserInfo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">queryCurrentUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// history.push(loginPath);</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// 如果是无需登录的页面，不执行</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">WHITE_LIST</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>history<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      fetchUserInfo<span class="token punctuation">,</span>
      settings<span class="token operator">:</span> defaultSettings<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> currentUser <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    fetchUserInfo<span class="token punctuation">,</span>
    currentUser<span class="token punctuation">,</span>
    settings<span class="token operator">:</span> defaultSettings<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询用户表格" tabindex="-1"><a class="header-anchor" href="#查询用户表格"><span>查询用户表格</span></a></h2><p>复制一份组件，修改为UserManage,并且在Admin目录下面：</p><p><img src="https://s2.loli.net/2023/10/17/P4GCEU9fRtKgB5a.webp" alt="image-20231017192334416"></p><h3 id="ant-design-pro-umi-框架" tabindex="-1"><a class="header-anchor" href="#ant-design-pro-umi-框架"><span>Ant Design Pro（Umi 框架）</span></a></h3><p>app.tsx 项目全局入口文件，定义了整个项目中使用的公共数据（比如用户信息）</p><p>access.ts 控制用户的访问权限</p><p>首次访问页面（刷新页面），进入 app.tsx，执行 getInitialState 方法，该方法的返回值就是全局可用的状态值。</p><p>access.ts代码：用户判断当前用户是不是管理员</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">access</span><span class="token punctuation">(</span>initialState<span class="token operator">:</span> <span class="token punctuation">{</span> currentUser<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">API</span><span class="token punctuation">.</span>CurrentUser <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> currentUser <span class="token punctuation">}</span> <span class="token operator">=</span> initialState <span class="token operator">??</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    canAdmin<span class="token operator">:</span> currentUser <span class="token operator">&amp;&amp;</span> currentUser<span class="token punctuation">.</span>userRole <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加一个路由，用户管理：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>  <span class="token punctuation">{</span>
    path<span class="token operator">:</span> <span class="token string">&#39;/admin&#39;</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;管理页&#39;</span><span class="token punctuation">,</span>
    icon<span class="token operator">:</span> <span class="token string">&#39;crown&#39;</span><span class="token punctuation">,</span>
    access<span class="token operator">:</span> <span class="token string">&#39;canAdmin&#39;</span><span class="token punctuation">,</span>
    component<span class="token operator">:</span> <span class="token string">&#39;./Admin&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 该组件下的路由都会被添加到路由配置中</span>
    routes<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/admin/user-manage&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;用户管理&#39;</span><span class="token punctuation">,</span> icon<span class="token operator">:</span> <span class="token string">&#39;smile&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> <span class="token string">&#39;./Admin/UserManage&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> component<span class="token operator">:</span> <span class="token string">&#39;./404&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改Admin.tsx页面，使用children来控制子页面： 里面的children就是子页面</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">const</span> Admin<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>children<span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PageHeaderWrapper</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">PageHeaderWrapper</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Admin<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="procomponents-高级表单" tabindex="-1"><a class="header-anchor" href="#procomponents-高级表单"><span>ProComponents 高级表单</span></a></h3><ol><li>通过 columns 定义表格有哪些列</li><li>columns 属性 <ul><li>dataIndex 对应返回数据对象的属性</li><li>title 表格列名</li><li>copyable 是否允许复制</li><li>ellipsis 是否允许缩略</li><li>valueType：用于声明这一列的类型（dateTime、select）</li></ul></li></ol><p><img src="https://s2.loli.net/2023/10/17/D3gwpQaZNOPyC2x.webp" alt="image-20231017194039521"></p><p>直接复制源代码进行使用</p><p>前端定义搜索用户接口：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/** 搜索用户 GET /api/search */</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">searchUsers</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token generic-function"><span class="token function">request</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">API</span><span class="token punctuation">.</span>CurrentUser<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/search&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    method<span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    <span class="token operator">...</span><span class="token punctuation">(</span>options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询表格完整代码如下：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span>ActionType<span class="token punctuation">,</span> ProColumns<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ant-design/pro-components&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>ProTable<span class="token punctuation">,</span> TableDropdown<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ant-design/pro-components&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>useRef<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>searchUsers<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/services/ant-design-pro/api&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span><span class="token constant">SYSTEM_LOGO</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/constant&quot;</span><span class="token punctuation">;</span>


<span class="token keyword">const</span> columns<span class="token operator">:</span> ProColumns<span class="token operator">&lt;</span><span class="token constant">API</span><span class="token punctuation">.</span>CurrentUser<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    dataIndex<span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span>
    title<span class="token operator">:</span> <span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;用户名&#39;</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span>
    copyable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;用户账户&#39;</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">&#39;userAccount&#39;</span><span class="token punctuation">,</span>
    copyable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;用户头像&#39;</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">&#39;avatarUrl&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>avatarUrl <span class="token operator">??</span> <span class="token constant">SYSTEM_LOGO</span><span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&quot;cxk&quot;</span><span class="token punctuation">}</span></span> <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span><span class="token comment">/*&lt;Image src={record.avatarUrl} width={100}/&gt;*/</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    copyable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;性别&#39;</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">&#39;gender&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;电话&#39;</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">&#39;phone&#39;</span><span class="token punctuation">,</span>
    copyable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;邮件&#39;</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span>
    copyable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;状态&#39;</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">&#39;userStatus&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;角色&#39;</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">&#39;userRole&#39;</span><span class="token punctuation">,</span>
    valueType<span class="token operator">:</span> <span class="token string">&#39;select&#39;</span><span class="token punctuation">,</span>
    valueEnum<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token number">0</span><span class="token operator">:</span> <span class="token punctuation">{</span>text<span class="token operator">:</span> <span class="token string">&#39;普通用户&#39;</span><span class="token punctuation">,</span> status<span class="token operator">:</span> <span class="token string">&#39;Default&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token number">1</span><span class="token operator">:</span> <span class="token punctuation">{</span>text<span class="token operator">:</span> <span class="token string">&#39;管理员&#39;</span><span class="token punctuation">,</span> status<span class="token operator">:</span> <span class="token string">&#39;Success&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">&#39;createTime&#39;</span><span class="token punctuation">,</span>
    valueType<span class="token operator">:</span> <span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;操作&#39;</span><span class="token punctuation">,</span>
    valueType<span class="token operator">:</span> <span class="token string">&#39;option&#39;</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">&#39;option&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>text<span class="token punctuation">,</span> record<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>
        <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>editable<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          action<span class="token operator">?.</span>startEditable<span class="token operator">?.</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token plain-text">
        编辑
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>


      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>url<span class="token punctuation">}</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>noopener noreferrer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>view<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        查看
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>


      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TableDropdown</span></span>
        <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>actionGroup<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">onSelect</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> action<span class="token operator">?.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">menus</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
          <span class="token punctuation">{</span>key<span class="token operator">:</span> <span class="token string">&#39;copy&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;复制&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>key<span class="token operator">:</span> <span class="token string">&#39;delete&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;删除&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token punctuation">,</span>


    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> actionRef <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>ActionType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// @ts-ignore</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>ProTable<span class="token operator">&lt;</span><span class="token constant">API</span><span class="token punctuation">.</span>CurrentUser<span class="token operator">&gt;</span>
      columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>
      actionRef<span class="token operator">=</span><span class="token punctuation">{</span>actionRef<span class="token punctuation">}</span>
      cardBordered
      request<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> sort<span class="token punctuation">,</span> filter<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sort<span class="token punctuation">,</span> filter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> userList <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">searchUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          data<span class="token operator">:</span> userList
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span>
      editable<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token string">&#39;multiple&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span>
      columnsState<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        persistenceKey<span class="token operator">:</span> <span class="token string">&#39;pro-table-singe-demos&#39;</span><span class="token punctuation">,</span>
        persistenceType<span class="token operator">:</span> <span class="token string">&#39;localStorage&#39;</span><span class="token punctuation">,</span>
        <span class="token function">onChange</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;value: &#39;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span>
      rowKey<span class="token operator">=</span><span class="token string">&quot;id&quot;</span>
      search<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        labelWidth<span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token comment">// options={{</span>
      <span class="token comment">//   setting: {</span>
      <span class="token comment">//     listsHeight: 400,</span>
      <span class="token comment">//   },</span>
      <span class="token comment">// }}</span>
      form<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token comment">// 由于配置了 transform，提交的参与与定义的不同这里需要转化一下</span>
        <span class="token function-variable function">syncToUrl</span><span class="token operator">:</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> type<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
              <span class="token operator">...</span>values<span class="token punctuation">,</span>
              created_at<span class="token operator">:</span> <span class="token punctuation">[</span>values<span class="token punctuation">.</span>startTime<span class="token punctuation">,</span> values<span class="token punctuation">.</span>endTime<span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span> values<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span>
      pagination<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        pageSize<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span>page<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span>
      dateFormatter<span class="token operator">=</span><span class="token string">&quot;string&quot;</span>
      headerTitle<span class="token operator">=</span><span class="token string">&quot;高级表格&quot;</span>
    <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>页面 效果如下：</p><p><img src="https://s2.loli.net/2023/10/17/knXVrxd58R4SFMy.webp" alt="image-20231017203631534"></p><p>Todo: bug 使用react自带的Image标签无法请求后端，但是自带的 img可以。</p>`,43);function b(g,y){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("原本请求："),n("a",r,[s("http://localhost:8000/api/user/login"),t(a)])]),n("p",null,[s("代理之后："),n("a",k,[s("http://localhost:8080/user/login"),t(a)])]),d,n("p",null,[s("此时访问"),n("a",v,[s("http://localhost:8000/user/register发现会重定向到login"),t(a)])]),m])}const w=e(i,[["render",b],["__file","用户中心项目2.html.vue"]]),U=JSON.parse('{"path":"/project/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E9%A1%B9%E7%9B%AE2.html","title":"用户中心2","lang":"en-US","frontmatter":{"title":"用户中心2","date":"2023-10-16T00:00:00.000Z","category":["项目实战","用户中心"],"tag":["项目实战","用户中心"],"description":"用户中心 登录逻辑 接受参数：用户账户，密码 接受类型：POST 请求体：JSON格式的数据 请求参数很长时不建议用get 返回值：用户信息(脱敏) 具体逻辑： 校验用户的账户，密码，是否符合要求 账户不少于四位 密码不少于四位 账户不能重复 账户不包含特殊字符 其他的校验 校验密码是否输入正确 ，要和数据库中的密码进行对比 记录用户的登录态（Sess...","head":[["meta",{"property":"og:url","content":"https://github.com/zhangruyi3906/blog/project/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E9%A1%B9%E7%9B%AE2.html"}],["meta",{"property":"og:site_name","content":"乘风破浪（长风破浪会有时，直挂云帆济沧海）"}],["meta",{"property":"og:title","content":"用户中心2"}],["meta",{"property":"og:description","content":"用户中心 登录逻辑 接受参数：用户账户，密码 接受类型：POST 请求体：JSON格式的数据 请求参数很长时不建议用get 返回值：用户信息(脱敏) 具体逻辑： 校验用户的账户，密码，是否符合要求 账户不少于四位 密码不少于四位 账户不能重复 账户不包含特殊字符 其他的校验 校验密码是否输入正确 ，要和数据库中的密码进行对比 记录用户的登录态（Sess..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://s2.loli.net/2023/10/16/STjFWIAhLODfzNq.webp"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-14T07:14:40.000Z"}],["meta",{"property":"article:author","content":"dreamchaser"}],["meta",{"property":"article:tag","content":"项目实战"}],["meta",{"property":"article:tag","content":"用户中心"}],["meta",{"property":"article:published_time","content":"2023-10-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-14T07:14:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"用户中心2\\",\\"image\\":[\\"https://s2.loli.net/2023/10/16/STjFWIAhLODfzNq.webp\\",\\"https://s2.loli.net/2023/10/16/1wplou7fR8siKnY.webp\\",\\"https://s2.loli.net/2023/10/16/gf8XQFbuviy9Ezw.webp\\",\\"https://s2.loli.net/2023/10/16/GI4rkvezQxAiODn.webp\\",\\"https://s2.loli.net/2023/10/16/1qEksG9NonPxBUO.webp\\",\\"https://s2.loli.net/2023/10/17/YfO1UcKrdFZXWIq.webp\\",\\"https://s2.loli.net/2023/10/17/obMOLzq2iZkeaud.webp\\",\\"https://s2.loli.net/2023/10/17/4WRGpxJrOM3BLPT.webp\\",\\"https://s2.loli.net/2023/10/17/FifwchAkd86Np7s.webp\\",\\"https://s2.loli.net/2023/10/17/MJPsoaFUqtmZWpR.webp\\",\\"https://s2.loli.net/2023/10/17/6WQXh5IRo7arO3M.webp\\",\\"https://s2.loli.net/2023/10/17/PvpCN8YO7ZfrcUy.webp\\",\\"https://s2.loli.net/2023/10/17/SCikVLnQOjdPpJY.webp\\",\\"https://s2.loli.net/2023/10/17/P4GCEU9fRtKgB5a.webp\\",\\"https://s2.loli.net/2023/10/17/D3gwpQaZNOPyC2x.webp\\",\\"https://s2.loli.net/2023/10/17/knXVrxd58R4SFMy.webp\\"],\\"datePublished\\":\\"2023-10-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-14T07:14:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"dreamchaser\\",\\"url\\":\\"https://github.com/zhangruyi3906\\"}]}"]]},"headers":[{"level":2,"title":"登录逻辑","slug":"登录逻辑","link":"#登录逻辑","children":[{"level":3,"title":"具体逻辑：","slug":"具体逻辑","link":"#具体逻辑","children":[]},{"level":3,"title":"控制器UserController","slug":"控制器usercontroller","link":"#控制器usercontroller","children":[]},{"level":3,"title":"登录注册测试","slug":"登录注册测试","link":"#登录注册测试","children":[]}]},{"level":2,"title":"前端代码编写","slug":"前端代码编写","link":"#前端代码编写","children":[{"level":3,"title":"前后端交互","slug":"前后端交互","link":"#前后端交互","children":[]},{"level":3,"title":"代理","slug":"代理","link":"#代理","children":[]}]},{"level":2,"title":"注册页面","slug":"注册页面","link":"#注册页面","children":[]},{"level":2,"title":"获取当前用户","slug":"获取当前用户","link":"#获取当前用户","children":[]},{"level":2,"title":"查询用户表格","slug":"查询用户表格","link":"#查询用户表格","children":[{"level":3,"title":"Ant Design Pro（Umi 框架）","slug":"ant-design-pro-umi-框架","link":"#ant-design-pro-umi-框架","children":[]},{"level":3,"title":"ProComponents 高级表单","slug":"procomponents-高级表单","link":"#procomponents-高级表单","children":[]}]}],"git":{"createdTime":1718196522000,"updatedTime":1718349280000,"contributors":[{"name":"zhangruyi3906","email":"3023208132@qq.com","commits":3}]},"readingTime":{"minutes":8.3,"words":2489},"filePathRelative":"project/用户中心/用户中心项目2.md","localizedDate":"October 16, 2023","excerpt":"\\n<h2>登录逻辑</h2>\\n<p>接受参数：用户账户，密码</p>\\n<p>接受类型：POST</p>\\n<p>请求体：JSON格式的数据</p>\\n<blockquote>\\n<p>请求参数很长时不建议用get</p>\\n</blockquote>\\n<p>返回值：用户信息(脱敏)</p>\\n<h3>具体逻辑：</h3>\\n<ol>\\n<li>校验用户的账户，密码，是否符合要求\\n<ol>\\n<li>账户不少于四位</li>\\n<li>密码不少于四位</li>\\n<li>账户不能重复</li>\\n<li>账户不包含特殊字符</li>\\n<li>其他的校验</li>\\n</ol>\\n</li>\\n<li>校验密码是否输入正确 ，要和数据库中的密码进行对比</li>\\n<li>记录用户的登录态（Session），存到服务器上，（用后端SpringBoot 框架封装的服务器tomcat去记录）</li>\\n<li>返回用户信息（脱敏）</li>\\n</ol>","autoDesc":true}');export{w as comp,U as data};
