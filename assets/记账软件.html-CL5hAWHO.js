import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as p}from"./app-Cxh2L1Vs.js";const t={},e=p(`<h1 id="记账软件" tabindex="-1"><a class="header-anchor" href="#记账软件"><span>记账软件</span></a></h1><p>项目分层，分包：</p><p>App;主运行层，包含主程序入口。</p><p>View层：视图层 控制台，负责显示用户界面和用户交互。</p><p>Service层：业务层，功能的实现，主要用作判断。主要和数据层进行交互。实现业务逻辑，与数据层交互。</p><p>dao层：数据访问层，操作数据库表的数据</p><p>Pojo: 实体包， 主要对于数据库的表名</p><p>Utils：工具包层，提供通用功能，如日期处理、文件操作等。</p><p>基本需求：</p><p><img src="https://s2.loli.net/2024/05/24/sLM3zPqX6tulQA9.png" alt="image-20240524163046293"></p><p>（1）登录：</p><p>校验用户名是否存在</p><p>在用户名存在的前提下，再校验密码是否正确</p><ol><li><ul><li>View层：提供登录界面，收集用户名和密码。</li><li>Service层：调用Dao层检查用户名是否存在，如果存在再验证密码。</li><li>Dao层：执行SQL查询，检查用户名和密码。</li></ul></li></ol><p>（2）注册：</p><p>判断用户名不能重复</p><ul><li><p>View层：提供注册界面，收集用户名等信息。</p></li><li><p>Service层：调用Dao层检查用户名是否已存在，如果不存在则添加新用户。</p></li><li><p>Dao层：执行SQL查询和插入操作。</p></li></ul><p>（3）查询？查询字段</p><p>按照id查询</p><ul><li><p>View层：提供查询界面，允许用户输入查询条件。</p></li><li><p>Service层：根据用户输入调用Dao层执行查询。</p></li><li><p>Dao层：执行SQL查询，返回结果。</p></li></ul><p>（4）多条件查询</p><p>输入一个日期，查询当天（日期输入格式限制？）</p><p>输入两个日期，查询日期范围内的</p><p>（5）添加</p><p>注意：系统自增id，用户不用自己输入</p><ul><li>View层：提供添加界面，收集用户输入的数据。</li><li>Service层：调用Dao层插入新记录，忽略自增ID。</li><li>Dao层：执行SQL插入操作。</li></ul><p>（6）编辑</p><p>编辑一个</p><p>编辑所有</p><p>（7）删除</p><p>删除一个 按照id删除 3 ？</p><p>删除多个 3,4,5</p><p>（8）搜索</p><p>输入1 flname</p><p>输入2 money</p><p>输入3 zhanghu</p><p>输入4 createtime</p><p>（9）导出</p><ul><li>View层：提供导出选项。</li><li>Service层：调用Dao层获取数据，然后使用Utils层的文件操作功能进行导出。</li><li>Utils层：提供文件检查和写入功能。</li></ul><p>注意：如果文件夹重名，则不新建文件夹，首先判断是否重名</p><p>修改记录会同步</p><p>导出：2016-10-29 会把10月29号所有的账户都搜索出来导出到当前项目的，以你的名字命名的文件夹下面，文件名为2016-10-29.txt:</p><p>9 其他支出 1000 现金 2016-10-29 丢钱了 qiweikai</p><p>10 交通支出 2300 交通银行 2016-10-29 油价还在涨啊 qiweikai</p><p>11 吃饭支出 1000 工商银行 2016-10-29 又吃饭 qiweikai</p><p>如果用户修改了第9条记录，把1000修改为9000，数据库要改，如果用户导出了文件，那么文件也会改</p><p>2016-10-29-2016-11-29.txt</p><p>扩展需求：</p><p><img src="https://s2.loli.net/2024/05/24/9DvbcmpftVkTGIE.jpg" alt="img"></p><p><img src="https://s2.loli.net/2024/05/24/Bwbe4zYThltx7iq.jpg" alt="img"></p><p>（1）上传账务到服务器</p><p>（2）客户端从服务器下载已经上传的账务</p><p>先给客户端显示有哪些已经上传的文件</p><p>（3）上传文件</p><p>上传文件：传入用户名--》建文件夹</p><p>​ 传入上传日期-》建文件，以上传的日期作为文件名，选择你电脑的任意位置选择文件进行上传</p><p>上传文件，我可能会上传docs, 或者png或者mp4等等, 还要你的操作序号，3，你登录系统的名字，上传的文件名字，文件里面内容要不要传过去。再传数据的时候，你得一次性传过去。</p><p>（4）下载文件</p><p>上述四个功能在一个文件中。</p><p>服务器这边接收文件：如果文件名已经存在，则不需要创建</p><p>上传的文件名是什么，名字就是什么</p><p>服务器和本地修改了数据都要进行同步。</p><p>写的时候，先自己电脑测试，自己电脑测试没有问题。 才在两台电脑上进行测试</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 登录逻辑</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> userDao<span class="token punctuation">.</span><span class="token function">findByUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 注册逻辑</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>userDao<span class="token punctuation">.</span><span class="token function">findByUsername</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        userDao<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 查询逻辑</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> userDao<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 多条件查询逻辑</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">multiQuery</span><span class="token punctuation">(</span><span class="token class-name">String</span> startDate<span class="token punctuation">,</span> <span class="token class-name">String</span> endDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> userDao<span class="token punctuation">.</span><span class="token function">findByDateRange</span><span class="token punctuation">(</span>startDate<span class="token punctuation">,</span> endDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 添加逻辑</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    userDao<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 编辑逻辑</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">edit</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    userDao<span class="token punctuation">.</span><span class="token function">updateUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 删除逻辑</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    userDao<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 搜索逻辑</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token class-name">String</span> keyword<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> userDao<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 导出逻辑</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportData</span><span class="token punctuation">(</span><span class="token class-name">String</span> date<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userDao<span class="token punctuation">.</span><span class="token function">findByDate</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> folderName <span class="token operator">=</span> <span class="token string">&quot;YourName&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 替换为实际用户名</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fileUtils<span class="token punctuation">.</span><span class="token function">isFolderExists</span><span class="token punctuation">(</span>folderName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fileUtils<span class="token punctuation">.</span><span class="token function">createFolder</span><span class="token punctuation">(</span>folderName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    fileUtils<span class="token punctuation">.</span><span class="token function">writeToFile</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> folderName<span class="token punctuation">,</span> date <span class="token operator">+</span> <span class="token string">&quot;.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,64),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","记账软件.html.vue"]]),d=JSON.parse('{"path":"/everyday/%E8%AF%BE%E5%A4%96%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E9%A1%B9%E7%9B%AE/%E8%AE%B0%E8%B4%A6%E8%BD%AF%E4%BB%B6.html","title":"实战项目记账软件","lang":"en-US","frontmatter":{"title":"实战项目记账软件","date":"2024-05-12T00:00:00.000Z","category":["每日一记"],"tag":["学习记录"],"description":"记账软件 项目分层，分包： App;主运行层，包含主程序入口。 View层：视图层 控制台，负责显示用户界面和用户交互。 Service层：业务层，功能的实现，主要用作判断。主要和数据层进行交互。实现业务逻辑，与数据层交互。 dao层：数据访问层，操作数据库表的数据 Pojo: 实体包， 主要对于数据库的表名 Utils：工具包层，提供通用功能，如日期...","head":[["meta",{"property":"og:url","content":"https://github.com/zhangruyi3906/blog/everyday/%E8%AF%BE%E5%A4%96%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E9%A1%B9%E7%9B%AE/%E8%AE%B0%E8%B4%A6%E8%BD%AF%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"乘风破浪（长风破浪会有时，直挂云帆济沧海）"}],["meta",{"property":"og:title","content":"实战项目记账软件"}],["meta",{"property":"og:description","content":"记账软件 项目分层，分包： App;主运行层，包含主程序入口。 View层：视图层 控制台，负责显示用户界面和用户交互。 Service层：业务层，功能的实现，主要用作判断。主要和数据层进行交互。实现业务逻辑，与数据层交互。 dao层：数据访问层，操作数据库表的数据 Pojo: 实体包， 主要对于数据库的表名 Utils：工具包层，提供通用功能，如日期..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://s2.loli.net/2024/05/24/sLM3zPqX6tulQA9.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-16T08:48:55.000Z"}],["meta",{"property":"article:author","content":"dreamchaser"}],["meta",{"property":"article:tag","content":"学习记录"}],["meta",{"property":"article:published_time","content":"2024-05-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-16T08:48:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"实战项目记账软件\\",\\"image\\":[\\"https://s2.loli.net/2024/05/24/sLM3zPqX6tulQA9.png\\",\\"https://s2.loli.net/2024/05/24/9DvbcmpftVkTGIE.jpg\\",\\"https://s2.loli.net/2024/05/24/Bwbe4zYThltx7iq.jpg\\"],\\"datePublished\\":\\"2024-05-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-16T08:48:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"dreamchaser\\",\\"url\\":\\"https://github.com/zhangruyi3906\\"}]}"]]},"headers":[],"git":{"createdTime":1718371287000,"updatedTime":1718527735000,"contributors":[{"name":"zhangruyi3906","email":"3023208132@qq.com","commits":1}]},"readingTime":{"minutes":4.01,"words":1202},"filePathRelative":"everyday/课外学习记录/项目/记账软件.md","localizedDate":"May 12, 2024","excerpt":"\\n<p>项目分层，分包：</p>\\n<p>App;主运行层，包含主程序入口。</p>\\n<p>View层：视图层 控制台，负责显示用户界面和用户交互。</p>\\n<p>Service层：业务层，功能的实现，主要用作判断。主要和数据层进行交互。实现业务逻辑，与数据层交互。</p>\\n<p>dao层：数据访问层，操作数据库表的数据</p>\\n<p>Pojo: 实体包， 主要对于数据库的表名</p>\\n<p>Utils：工具包层，提供通用功能，如日期处理、文件操作等。</p>","autoDesc":true}');export{k as comp,d as data};
