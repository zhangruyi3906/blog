import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as l,c,a as n,e as s,b as t,d as p}from"./app-B2VvKADs.js";const i={},u=p('<h1 id="ikun伙伴匹配系统" tabindex="-1"><a class="header-anchor" href="#ikun伙伴匹配系统"><span>ikun伙伴匹配系统</span></a></h1><p>介绍：帮助大家找到志同道合的ikun</p><h2 id="需求分析" tabindex="-1"><a class="header-anchor" href="#需求分析"><span>需求分析</span></a></h2><ol><li>用户去添加标签，标签的分类（要有哪些标签，怎么把标签进行分类） 学习方向 java/c++，工作/大学</li><li>主动搜索，允许用户根据标签去搜索其他用户 <ol><li>Redis缓存</li></ol></li><li>组队 <ol><li>创建队伍</li><li>加入队伍</li><li>根据标签查询队伍</li><li>邀请其他人</li></ol></li><li>允许用户去修改标签</li><li>推荐 <ol><li>相似度计算算法+本地式分布式计算</li></ol></li></ol><h2 id="技术栈" tabindex="-1"><a class="header-anchor" href="#技术栈"><span>技术栈</span></a></h2><h3 id="前端" tabindex="-1"><a class="header-anchor" href="#前端"><span>前端</span></a></h3><ol><li>Vue3 开发框架</li><li>Vant UI （基于Vue的移动组件库） （React版Zent）</li><li>Vite</li><li>nginx来单机部署</li></ol><h3 id="后端" tabindex="-1"><a class="header-anchor" href="#后端"><span>后端</span></a></h3><ol><li>Java+Springboot框架</li><li>SpringMVC+Mybatis+MybatisPlus</li><li>MySQL数据库</li><li>Redis缓存</li><li>Swagger+Knife4j接口文档</li></ol><h2 id="前端项目初始化" tabindex="-1"><a class="header-anchor" href="#前端项目初始化"><span>前端项目初始化</span></a></h2>',10),r={href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://cn.vitejs.dev/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://vant-contrib.gitee.io/vant/#/zh-CN/home",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>用脚手架初始项目</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">yarn</span> create vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>整合组件库 Vant</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> vant
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>按需引入组件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> @vant/auto-import-resolver unplugin-vue-components <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置插件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">import</span> vue from <span class="token string">&#39;@vitejs/plugin-vue&#39;</span><span class="token punctuation">;</span>
<span class="token function">import</span> Components from <span class="token string">&#39;unplugin-vue-components/vite&#39;</span><span class="token punctuation">;</span>
<span class="token function">import</span> <span class="token punctuation">{</span> VantResolver <span class="token punctuation">}</span> from <span class="token string">&#39;@vant/auto-import-resolver&#39;</span><span class="token punctuation">;</span>

<span class="token builtin class-name">export</span> default <span class="token punctuation">{</span>
  plugins: <span class="token punctuation">[</span>
    vue<span class="token punctuation">(</span><span class="token punctuation">)</span>,
    Components<span class="token punctuation">(</span><span class="token punctuation">{</span>
      resolvers: <span class="token punctuation">[</span>VantResolver<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>,
    <span class="token punctuation">}</span><span class="token punctuation">)</span>,
  <span class="token punctuation">]</span>,
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意！</p><p>有些样式样式还是需要自己引入</p><p><img src="https://s2.loli.net/2023/10/20/uyEQcrC75J6o9Mt.webp" alt="image-20231020103149569"></p><h3 id="前端主页-组件" tabindex="-1"><a class="header-anchor" href="#前端主页-组件"><span>前端主页+组件</span></a></h3><p>导航条：展示当前页面名称：</p><p>主页搜索框=&gt;搜索页=&gt;搜索结果页（标签筛选页面）</p><p>内容</p><p>tab栏：</p><ul><li>主页（推荐页） <ul><li>搜索框</li><li>banner</li><li>推荐信息流</li></ul></li><li>队伍页</li><li>用户页（消息-&gt;考虑邮件发送方式）</li></ul><h3 id="添加navbar导航栏" tabindex="-1"><a class="header-anchor" href="#添加navbar导航栏"><span>添加navbar导航栏</span></a></h3><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-nav-bar</span>
        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>标题<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">left-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>返回<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">right-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>按钮<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">left-arrow</span>
        <span class="token attr-name">@click-left</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onClickLeft<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">@click-right</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onClickRight<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#right</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>18<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-nav-bar</span><span class="token punctuation">&gt;</span></span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">onClickLeft</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> history<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">onClickRight</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">showToast</span><span class="token punctuation">(</span><span class="token string">&#39;按钮&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://s2.loli.net/2023/10/20/H6p7ogtbDJlAkm5.webp" alt="image-20231020102414409"></p><p>页面效果如下：</p><p><img src="https://s2.loli.net/2023/10/20/TxIO3tUrvCP62i7.webp" alt="image-20231020102432835"></p><h3 id="添加tabbar标签栏" tabindex="-1"><a class="header-anchor" href="#添加tabbar标签栏"><span>添加tabbar标签栏</span></a></h3><p>vue页面</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-tabbar</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>active<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onChange<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-tabbar-item</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home-o<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>主页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-tabbar-item</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-tabbar-item</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>team<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>队伍<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-tabbar-item</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-tabbar-item</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>friends-o<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>个人<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-tabbar-item</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-tabbar</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ts</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> active <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">showToast</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">标签 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下</p><p><img src="https://s2.loli.net/2023/10/20/ClOFwN7EP6qx9Mh.webp" alt="image-20231020103349095"></p><p>页面的切换，组件化思想</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>active===&#39;index&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Index</span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>active===&#39;team&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Team</span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据库设计" tabindex="-1"><a class="header-anchor" href="#数据库设计"><span>数据库设计</span></a></h2><p>标签的分类（要有哪些标签，怎么把标签进行分类）</p><p>标签表（分类表）</p><p>建议用标签，不要用分类，更灵活</p><p>性别：男，女</p><p>方向：Java，c++，go，前端</p><p>目标：考研，春招，秋招，社招，考公，竞赛，转行，跳槽</p><p>段位：初级，中级，高级，王者</p><p>身份：大一，大二，大三，大四，学生，待业，以就业，研一，研二，研三</p><p>状态：乐观，消极，一般，单身，已婚，有对象</p><h3 id="标签表" tabindex="-1"><a class="header-anchor" href="#标签表"><span>标签表</span></a></h3><table><thead><tr><th>字段</th><th>类型</th><th>备注</th></tr></thead><tbody><tr><td>id</td><td>int</td><td>主键</td></tr><tr><td>tagName</td><td>varchar</td><td>标签名，唯一，索引</td></tr><tr><td>userId</td><td>int</td><td>上传标签的用户,普通索引</td></tr><tr><td>parentId</td><td>int</td><td>父标签id</td></tr><tr><td>isParent</td><td>tinyint</td><td>是否为父标签</td></tr><tr><td>createTime</td><td>datetime</td><td>创建时间</td></tr><tr><td>updateTime</td><td>datetime</td><td>修改时间</td></tr><tr><td>isDelete</td><td>tinyint</td><td>是否删除</td></tr></tbody></table><p>怎么查询所有标签，并且把标签分好组？ 根据父标签id查询</p><p>根据父标签查询子标签？根据id查询</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> tag
<span class="token punctuation">(</span>
    id         <span class="token keyword">bigint</span> <span class="token keyword">auto_increment</span> <span class="token keyword">comment</span> <span class="token string">&#39;id&#39;</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    tagName    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span>                       <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;标签名称&#39;</span><span class="token punctuation">,</span>
    userId     <span class="token keyword">bigint</span>                             <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;用户id&#39;</span><span class="token punctuation">,</span>
    parentId   <span class="token keyword">bigint</span>                             <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;父标签id&#39;</span><span class="token punctuation">,</span>
    isParent   <span class="token keyword">tinyint</span>  <span class="token keyword">default</span> <span class="token number">0</span>                 <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;0-否 1-是&#39;</span><span class="token punctuation">,</span>
    createTime <span class="token keyword">datetime</span> <span class="token keyword">default</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
    updateTime <span class="token keyword">datetime</span> <span class="token keyword">default</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token boolean">null</span> <span class="token keyword">on</span> <span class="token keyword">update</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">comment</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>
    isDelete   <span class="token keyword">tinyint</span>  <span class="token keyword">default</span> <span class="token number">0</span>                 <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;是否删除&#39;</span>
<span class="token punctuation">)</span>
    <span class="token keyword">comment</span> <span class="token string">&#39;标签&#39;</span><span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改用户表" tabindex="-1"><a class="header-anchor" href="#修改用户表"><span>修改用户表</span></a></h3><p>用户有哪些标签？</p><ol><li><p>直接在用户表补充tags字段，[&#39;java&#39;,&#39;男&#39;] 存json字符串</p><p>优点：查询方便，不用新建关联表，标签是用户的固有属性（除了该系统，其他系统可能要用到，标签是用户的固有属性）</p><p>查询用户列表，查关系表拿到这100个用户的所有标签id，再根据标签id去查标签表</p><p>哪怕性能低，可以用缓存</p><p>缺点：用户表多一列，会有点</p></li><li><p>加一个关联表，记录用户和标签的关系</p><p>关联表的应用场景：查询灵活，可以正查反查</p><p>缺点：要多建一个表，多维护一个表</p><p>重点：企业大项目开发中尽量减少关联查询，很影响扩展性，而且会影响查询性能</p></li></ol><p><strong>选择第一种</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token keyword">user</span>
    <span class="token keyword">add</span> tags <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;标签列表&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加索引" tabindex="-1"><a class="header-anchor" href="#添加索引"><span>添加索引</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">unique</span> <span class="token keyword">index</span> tagName_idx
    <span class="token keyword">on</span> tag <span class="token punctuation">(</span>tagName<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">create</span> <span class="token keyword">index</span> userId_idx
    <span class="token keyword">on</span> tag <span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://s2.loli.net/2023/10/20/Q5MKR26VlHBrWxE.webp" alt="image-20231020111358100"></p><h2 id="后端接口开发" tabindex="-1"><a class="header-anchor" href="#后端接口开发"><span>后端接口开发</span></a></h2><p>搜索标签</p><ol><li>允许用户传入多个标签，多个标签都存在才搜索出来 and</li><li>允许用户传入多个标签，有任何一个标签存在就能搜索出来 or</li></ol><p>两种方式：</p><ol><li>SQL查询 （实现简单）</li><li>内存查询 （灵活 ,可以通过并发进一步优化）</li></ol><p>如果参数可以分析，根据用户的参数去选择查询方式，比如标签数</p><p>如果不可以分析，并且数据库足够，内存足够，可以并发查询，谁先返回用谁</p><p>解析JSON字符串：</p><p>序列化：把Java对象转为json</p><p>反序列化：把json转为Java对象</p><p>json序列化库：</p><ol><li>Fastjson alibaba （快，漏洞太多）</li><li>gson （google ）</li><li>jackson</li><li>kryo</li></ol><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/com.google.code.gson/gson --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.google.code.gson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>gson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.8.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 根据标签搜索用户
     *
     * <span class="token keyword">@param</span> <span class="token parameter">tagNameList</span> 标签列表
     * <span class="token keyword">@return</span> 用户列表
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchUsersByTags</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> tagNameList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>tagNameList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BussinessException</span><span class="token punctuation">(</span><span class="token class-name">Code</span><span class="token punctuation">.</span><span class="token constant">PARAMS_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//return searchUsersByTagsBySQL(tagNameList);</span>
        <span class="token keyword">return</span> <span class="token function">searchUsersByTagsByMemory</span><span class="token punctuation">(</span>tagNameList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchUsersByTagsByMemory</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> tagNameList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//先查询所有用户</span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userList <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//在内存中判断：</span>
        <span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>user <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> tagsStr <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>tagsStr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>tagsStr<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeToken</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            set <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>set<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> tagName <span class="token operator">:</span> tagNameList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>set<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>tagName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">getSafetyUser</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> users<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Deprecated</span> <span class="token comment">//废弃</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchUsersByTagsBySQL</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> tagNameList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> tagName <span class="token operator">:</span> tagNameList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            queryWrapper <span class="token operator">=</span> queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;tags&quot;</span><span class="token punctuation">,</span> tagName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userList <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">getSafetyUser</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> users<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Java8</p><ol><li>stream /parallelStream 流失处理</li><li>Optional可选类</li></ol>`,72);function m(g,b){const a=o("ExternalLinkIcon");return l(),c("div",null,[u,n("p",null,[s("Vue："),n("a",r,[s("https://cn.vuejs.org/"),t(a)])]),n("p",null,[s("Vite："),n("a",k,[s("https://cn.vitejs.dev/"),t(a)])]),n("p",null,[s("Vant："),n("a",d,[s("https://vant-contrib.gitee.io/vant/#/zh-CN/home"),t(a)])]),v])}const f=e(i,[["render",m],["__file","ikun伙伴匹配系统1.html.vue"]]),w=JSON.parse('{"path":"/project/ikun%E4%BC%99%E4%BC%B4%E5%8C%B9%E9%85%8D%E7%B3%BB%E7%BB%9F/ikun%E4%BC%99%E4%BC%B4%E5%8C%B9%E9%85%8D%E7%B3%BB%E7%BB%9F1.html","title":"ikun伙伴匹配系统1","lang":"en-US","frontmatter":{"title":"ikun伙伴匹配系统1","date":"2023-10-20T00:00:00.000Z","category":["项目实战","ikun伙伴匹配系统"],"tag":["项目实战","ikun伙伴匹配系统"],"description":"ikun伙伴匹配系统 介绍：帮助大家找到志同道合的ikun 需求分析 用户去添加标签，标签的分类（要有哪些标签，怎么把标签进行分类） 学习方向 java/c++，工作/大学 主动搜索，允许用户根据标签去搜索其他用户 Redis缓存 组队 创建队伍 加入队伍 根据标签查询队伍 邀请其他人 允许用户去修改标签 推荐 相似度计算算法+本地式分布式计算 技术栈...","head":[["meta",{"property":"og:url","content":"https://github.com/zhangruyi3906/blog/project/ikun%E4%BC%99%E4%BC%B4%E5%8C%B9%E9%85%8D%E7%B3%BB%E7%BB%9F/ikun%E4%BC%99%E4%BC%B4%E5%8C%B9%E9%85%8D%E7%B3%BB%E7%BB%9F1.html"}],["meta",{"property":"og:site_name","content":"乘风破浪（长风破浪会有时，直挂云帆济沧海）"}],["meta",{"property":"og:title","content":"ikun伙伴匹配系统1"}],["meta",{"property":"og:description","content":"ikun伙伴匹配系统 介绍：帮助大家找到志同道合的ikun 需求分析 用户去添加标签，标签的分类（要有哪些标签，怎么把标签进行分类） 学习方向 java/c++，工作/大学 主动搜索，允许用户根据标签去搜索其他用户 Redis缓存 组队 创建队伍 加入队伍 根据标签查询队伍 邀请其他人 允许用户去修改标签 推荐 相似度计算算法+本地式分布式计算 技术栈..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://s2.loli.net/2023/10/20/uyEQcrC75J6o9Mt.webp"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-14T07:14:40.000Z"}],["meta",{"property":"article:author","content":"dreamchaser"}],["meta",{"property":"article:tag","content":"项目实战"}],["meta",{"property":"article:tag","content":"ikun伙伴匹配系统"}],["meta",{"property":"article:published_time","content":"2023-10-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-14T07:14:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ikun伙伴匹配系统1\\",\\"image\\":[\\"https://s2.loli.net/2023/10/20/uyEQcrC75J6o9Mt.webp\\",\\"https://s2.loli.net/2023/10/20/H6p7ogtbDJlAkm5.webp\\",\\"https://s2.loli.net/2023/10/20/TxIO3tUrvCP62i7.webp\\",\\"https://s2.loli.net/2023/10/20/ClOFwN7EP6qx9Mh.webp\\",\\"https://s2.loli.net/2023/10/20/Q5MKR26VlHBrWxE.webp\\"],\\"datePublished\\":\\"2023-10-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-14T07:14:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"dreamchaser\\",\\"url\\":\\"https://github.com/zhangruyi3906\\"}]}"]]},"headers":[{"level":2,"title":"需求分析","slug":"需求分析","link":"#需求分析","children":[]},{"level":2,"title":"技术栈","slug":"技术栈","link":"#技术栈","children":[{"level":3,"title":"前端","slug":"前端","link":"#前端","children":[]},{"level":3,"title":"后端","slug":"后端","link":"#后端","children":[]}]},{"level":2,"title":"前端项目初始化","slug":"前端项目初始化","link":"#前端项目初始化","children":[{"level":3,"title":"前端主页+组件","slug":"前端主页-组件","link":"#前端主页-组件","children":[]},{"level":3,"title":"添加navbar导航栏","slug":"添加navbar导航栏","link":"#添加navbar导航栏","children":[]},{"level":3,"title":"添加tabbar标签栏","slug":"添加tabbar标签栏","link":"#添加tabbar标签栏","children":[]}]},{"level":2,"title":"数据库设计","slug":"数据库设计","link":"#数据库设计","children":[{"level":3,"title":"标签表","slug":"标签表","link":"#标签表","children":[]},{"level":3,"title":"修改用户表","slug":"修改用户表","link":"#修改用户表","children":[]},{"level":3,"title":"添加索引","slug":"添加索引","link":"#添加索引","children":[]}]},{"level":2,"title":"后端接口开发","slug":"后端接口开发","link":"#后端接口开发","children":[]}],"git":{"createdTime":1718196522000,"updatedTime":1718349280000,"contributors":[{"name":"zhangruyi3906","email":"3023208132@qq.com","commits":3}]},"readingTime":{"minutes":5.16,"words":1549},"filePathRelative":"project/ikun伙伴匹配系统/ikun伙伴匹配系统1.md","localizedDate":"October 20, 2023","excerpt":"\\n<p>介绍：帮助大家找到志同道合的ikun</p>\\n<h2>需求分析</h2>\\n<ol>\\n<li>用户去添加标签，标签的分类（要有哪些标签，怎么把标签进行分类） 学习方向 java/c++，工作/大学</li>\\n<li>主动搜索，允许用户根据标签去搜索其他用户\\n<ol>\\n<li>Redis缓存</li>\\n</ol>\\n</li>\\n<li>组队\\n<ol>\\n<li>创建队伍</li>\\n<li>加入队伍</li>\\n<li>根据标签查询队伍</li>\\n<li>邀请其他人</li>\\n</ol>\\n</li>\\n<li>允许用户去修改标签</li>\\n<li>推荐\\n<ol>\\n<li>相似度计算算法+本地式分布式计算</li>\\n</ol>\\n</li>\\n</ol>","autoDesc":true}');export{f as comp,w as data};
